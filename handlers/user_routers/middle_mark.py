from aiogram import Router, F
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from handlers.user_routers.states import MarksState
from keyboards import inline_kb

middle_mark_router = Router()


@middle_mark_router.callback_query(F.data == "calc_marks")
async def calc_marks_ikb(callback: CallbackQuery, state: FSMContext):
    await state.clear()

    try:
        await callback.message.delete()
    except TelegramBadRequest as e:
        pass

    await cmd_marks(callback.message, state)

    await callback.answer()


@middle_mark_router.message(Command('marks'))
async def cmd_marks(message: Message, state: FSMContext):
    TEXT = (
        '<b>üíØ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—à–ª–∏ –≤ —Ä–µ–∂–∏–º —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞</b>\n\n'
        'üìã –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ—Ü–µ–Ω–æ–∫ –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç :(\n\n'
        'üìä –í–∞—à —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª -> 0.0\n\n'
        'üëá –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –Ω—É–∂–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏'
    )

    list_marks = []
    average_mark = 0.0

    await state.update_data(
        list_marks=list_marks,
        average_mark=average_mark)

    await message.answer(text=TEXT,
                         reply_markup=inline_kb.list_2345_marks())

    await state.set_state(MarksState.waiting_add_marks)


@middle_mark_router.callback_query(MarksState.waiting_add_marks)
async def add_marks_cb(callback: CallbackQuery, state: FSMContext):

    add_mark = float(callback.data)

    data = await state.get_data()
    new_marks_list = data['list_marks']
    new_marks_list.append(add_mark)

    new_avg = sum(new_marks_list) / len(new_marks_list) if new_marks_list else 0.0

    target_5_for_4_5 = max(0, (len(new_marks_list) * 4.5 - sum(new_marks_list)) / (5 - 4.5))

    target_5_for_3_5 = max(0, (len(new_marks_list) * 3.5 - sum(new_marks_list)) / (5 - 3.5))

    target_4_for_3_5 = max(0, (len(new_marks_list) * 3.5 - sum(new_marks_list)) / (4 - 3.5))

    marks_display = ' | '.join(str(mark) for mark in new_marks_list) + ' |'

    if new_avg >= 4.50:
        quarter_grade = '5 üü¢'
    elif new_avg >= 3.50:
        quarter_grade = '4 üü°'
    elif new_avg >= 2.50:
        quarter_grade = '3 üü†'
    else:
        quarter_grade = '2 üî¥'

    TEXT = (
        '<b>üíØ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—à–ª–∏ –≤ —Ä–µ–∂–∏–º —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞</b>\n\n'
        f'<b>üìã –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ—Ü–µ–Ω–æ–∫ ‚¨áÔ∏è\n'
        f'| {marks_display}\n\n'
        f'üìä –í–∞—à —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª ‚û°Ô∏è {new_avg:.2f}\n'
        f'üîÑ –û—Ü–µ–Ω–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–π–¥–µ—Ç –≤ —á–µ—Ç–≤–µ—Ä—Ç—å: {quarter_grade}</b>\n\n'
        f'üìà –ü—Ä–æ–≥–Ω–æ–∑ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏:\n'
        f'üîπ –ö–æ–ª-–≤–æ 5–æ–∫ –¥–æ —Å—Ä. –±–∞–ª–ª–∞ 4.5: {int(target_5_for_4_5)}\n'
        f'üîπ –ö–æ–ª-–≤–æ 5–æ–∫ –¥–æ —Å—Ä. –±–∞–ª–ª–∞ 3.5: {int(target_5_for_3_5)}\n'
        f'üîπ –ö–æ–ª-–≤–æ 4–æ–∫ –¥–æ —Å—Ä. –±–∞–ª–ª–∞ 3.5: {int(target_4_for_3_5)}\n\n'
        'üëá –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –Ω—É–∂–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏'
    )

    await callback.bot.edit_message_text(
        text=TEXT,
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id,
        reply_markup=inline_kb.list_2345_marks()
    )

    await state.update_data(
        list_marks=new_marks_list,
        average_mark=new_avg)
